{"version":3,"sources":["components/FriendCard/index.js","components/Wrapper/index.js","components/Title/index.js","App.js","index.js"],"names":["FriendCard","props","className","onClick","clickFriend","id","alt","name","src","image","Wrapper","children","Title","styles","main","display","flexDirection","justifyContent","width","App","state","friends","count","highScore","playing","a","clickedFriend","filter","friend","clicked","setState","restart","randomize","console","log","test","forEach","this","stateArr","randomArr","length","position","Math","floor","random","push","splice","map","key","style","checkMessage","loadFriends","Component","ReactDOM","render","document","getElementById"],"mappings":"ymEAuBeA,MApBf,SAAoBC,GAClB,OACE,yBAAKC,UAAU,QACb,yBACEC,QAAS,kBAAMF,EAAMG,YAAYH,EAAMI,KACvCH,UAAU,iBAEV,yBAAKI,IAAKL,EAAMM,KAAMC,IAAKP,EAAMQ,SAEnC,yBAAKP,UAAU,WACb,4BACE,4BACE,gCAASD,EAAMM,W,MCRZG,MAJf,SAAiBT,GACf,OAAO,yBAAKC,UAAU,WAAWD,EAAMU,W,MCG1BC,MAJf,SAAeX,GACb,OAAO,wBAAIC,UAAU,SAASD,EAAMU,W,OCEhCE,EAAS,CACbC,KAAM,CACJC,QAAS,OACTC,cAAe,MACfC,eAAgB,cAChBC,MAAO,QAiHIC,E,2MA3GbC,MAAQ,CACNC,UACAC,MAAO,EACPC,UAAW,EACXC,SAAS,G,EAGXpB,Y,uCAAc,WAAMC,GAAN,eAAAoB,EAAA,0DAGNC,EAAgB,EAAKN,MAAMC,QAAQM,QAAO,SAAAC,GAAM,OAAIA,EAAOvB,KAAOA,MAErD,GAAGwB,QALV,uBAMVH,EAAc,GAAGG,SAAU,EANjB,SAOJ,EAAKC,SAAS,CAAER,MAAO,EAAKF,MAAME,MAAQ,IAPtC,OAQN,EAAKF,MAAME,MAAQ,EAAKF,MAAMG,WAChC,EAAKO,SAAS,CAAEP,UAAW,EAAKH,MAAME,QAEpC,EAAKF,MAAME,MAAQ,KAAO,GAC5B,EAAKS,UAZG,uBAeV,EAAKD,SAAS,CAAER,MAAO,IACvB,EAAKQ,SAAS,CAAEN,SAAS,IAhBf,QAwBZ,EAAKQ,YAxBO,4C,wDA2BdD,QAAU,WAERE,QAAQC,IAAI,QACZ,IAAMC,EAAO,EAAKf,MAAMC,QAAQM,QAAO,SAAAC,GAAM,OAAuB,IAAnBA,EAAOC,WAGxDI,QAAQC,IAAIC,GACZA,EAAKC,SAAQ,SAAAR,GAAM,OAAKA,EAAOC,SAAU,KACzCI,QAAQC,IAAI,EAAKd,MAAMC,UACI,IAAvB,EAAKD,MAAMI,UACb,EAAKM,SAAS,CAAEN,SAAS,IACzB,EAAKM,SAAS,CAAER,MAAO,M,8EAKzB,IAAKe,KAAKjB,MAAMI,QACd,OACE,6BACE,wBAAIrB,QAASkC,KAAKN,SAAlB,4B,0CAONM,KAAKL,c,kCAQL,IAHA,IAAMM,EAAWD,KAAKjB,MAAMC,QAEtBkB,EAAY,GACXD,EAASE,OAAS,GAAG,CAC1B,IAAIC,EAAWC,KAAKC,MAAMD,KAAKE,SAAWN,EAASE,QACnDD,EAAUM,KAAKP,EAASG,IACxBH,EAASQ,OAAOL,EAAU,GAG5BJ,KAAKP,SAAS,CAAET,QAASkB,M,oCAGZ,IAAD,OACZ,GAAIF,KAAKjB,MAAMI,QACb,OAAOa,KAAKjB,MAAMC,QAAQ0B,KAAI,SAAAnB,GAAM,OAClC,kBAAC,EAAD,CACExB,YAAa,EAAKA,YAClBC,GAAIuB,EAAOvB,GACX2C,IAAKpB,EAAOvB,GACZE,KAAMqB,EAAOrB,KACbE,MAAOmB,EAAOnB,a,+BAOpB,OACE,kBAAC,EAAD,KACE,kBAAC,EAAD,oBACA,yBAAKwC,MAAOpC,EAAOC,MACjB,kBAAC,EAAD,uBAAuBuB,KAAKjB,MAAME,OAClC,kBAAC,EAAD,oBAAoBe,KAAKjB,MAAMG,YAEhCc,KAAKa,eACN,kBAAC,EAAD,MACCb,KAAKc,mB,GAvGIC,a,MCVlBC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,W","file":"static/js/main.65bfcc5c.chunk.js","sourcesContent":["import React from \"react\";\r\nimport \"./style.css\";\r\n\r\nfunction FriendCard(props) {\r\n  return (\r\n    <div className=\"card\">\r\n      <div\r\n        onClick={() => props.clickFriend(props.id)}\r\n        className=\"img-container\"\r\n      >\r\n        <img alt={props.name} src={props.image} />\r\n      </div>\r\n      <div className=\"content\">\r\n        <ul>\r\n          <li>\r\n            <strong>{props.name}</strong>\r\n          </li>\r\n        </ul>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default FriendCard;\r\n","import React from \"react\";\r\nimport \"./style.css\";\r\n\r\nfunction Wrapper(props) {\r\n  return <div className=\"wrapper\">{props.children}</div>;\r\n}\r\n\r\nexport default Wrapper;\r\n","import React from \"react\";\r\nimport \"./style.css\";\r\n\r\nfunction Title(props) {\r\n  return <h1 className=\"title\">{props.children}</h1>;\r\n}\r\n\r\nexport default Title;\r\n","import React, { Component } from \"react\";\r\nimport FriendCard from \"./components/FriendCard\";\r\nimport Wrapper from \"./components/Wrapper\";\r\nimport Title from \"./components/Title\";\r\nimport friends from \"./friends.json\";\r\n\r\nconst styles = {\r\n  main: {\r\n    display: \"flex\",\r\n    flexDirection: \"row\",\r\n    justifyContent: \"spaceAround\",\r\n    width: \"80%\"\r\n  }\r\n};\r\n\r\nclass App extends Component {\r\n  // Setting this.state.friends to the friends json array\r\n  state = {\r\n    friends,\r\n    count: 0,\r\n    highScore: 0,\r\n    playing: true\r\n  };\r\n\r\n  clickFriend = async id => {\r\n    // console.log(this.state.friends);\r\n    // Filter this.state.friends for friends with an id not equal to the id being removed\r\n    const clickedFriend = this.state.friends.filter(friend => friend.id === id);\r\n    // const OTHER = this.state.friends.filter(friend => friend.id !== id);\r\n    if (!clickedFriend[0].clicked) {\r\n      clickedFriend[0].clicked = true;\r\n      await this.setState({ count: this.state.count + 1 });\r\n      if (this.state.count > this.state.highScore) {\r\n        this.setState({ highScore: this.state.count });\r\n      }\r\n      if (this.state.count % 12 === 0) {\r\n        this.restart();\r\n      }\r\n    } else {\r\n      this.setState({ count: 0 });\r\n      this.setState({ playing: false });\r\n    }\r\n    // console.log(clickedFriend[0].clicked);\r\n    // Set this.state.friends equal to the new friends array\r\n    // this.setState({ friends: clickedFriend, count: this.state.count + 1 });\r\n    // console.log(this.state.count);\r\n    // console.log(this.state.friends);\r\n    // console.log(\"---------\");\r\n    this.randomize();\r\n  };\r\n\r\n  restart = () => {\r\n    // return <h1>Playing</h1>;\r\n    console.log(\"test\");\r\n    const test = this.state.friends.filter(friend => friend.clicked === true);\r\n\r\n    // const test = this.state.friends;\r\n    console.log(test);\r\n    test.forEach(friend => (friend.clicked = false));\r\n    console.log(this.state.friends);\r\n    if (this.state.playing === false) {\r\n      this.setState({ playing: true });\r\n      this.setState({ count: 0 });\r\n    }\r\n  };\r\n\r\n  checkMessage() {\r\n    if (!this.state.playing) {\r\n      return (\r\n        <div>\r\n          <h1 onClick={this.restart}>You Lost. Play Again?</h1>\r\n        </div>\r\n      );\r\n    }\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.randomize();\r\n  }\r\n\r\n  randomize() {\r\n    // console.log(this.state.friends);\r\n    const stateArr = this.state.friends;\r\n    // console.log(stateArr);\r\n    const randomArr = [];\r\n    while (stateArr.length > 0) {\r\n      let position = Math.floor(Math.random() * stateArr.length);\r\n      randomArr.push(stateArr[position]);\r\n      stateArr.splice(position, 1);\r\n    }\r\n    // console.log(randomArr);\r\n    this.setState({ friends: randomArr });\r\n  }\r\n\r\n  loadFriends() {\r\n    if (this.state.playing) {\r\n      return this.state.friends.map(friend => (\r\n        <FriendCard\r\n          clickFriend={this.clickFriend}\r\n          id={friend.id}\r\n          key={friend.id}\r\n          name={friend.name}\r\n          image={friend.image}\r\n        />\r\n      ));\r\n    }\r\n  }\r\n  // Map over this.state.friends and render a FriendCard component for each friend object\r\n  render() {\r\n    return (\r\n      <Wrapper>\r\n        <Title>Clicky Game</Title>\r\n        <div style={styles.main}>\r\n          <Title>Current Score: {this.state.count}</Title>\r\n          <Title>High Score: {this.state.highScore}</Title>\r\n        </div>\r\n        {this.checkMessage()}\r\n        <Title></Title>\r\n        {this.loadFriends()}\r\n      </Wrapper>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport App from \"./App\";\r\nimport \"./index.css\";\r\n\r\nReactDOM.render(<App />, document.getElementById(\"root\"));\r\n"],"sourceRoot":""}